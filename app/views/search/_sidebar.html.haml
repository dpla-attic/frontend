= render partial: 'search/sidebar/refine_by_subject'

.module.yellow
  %h6.open By Date
  .slidingDiv
    - if @search.refine[:after].present?
      .refineResult
        %span
          After
          = @search.refine[:after].strftime('%b %-d, %Y')
        = link_to '×', params.reject { |k,v| k.to_sym.eql? :after }
    - if @search.refine[:before].present?
      .refineResult
        %span
          Before
          = @search.refine[:before].strftime('%b %-d, %Y')
        = link_to '×', params.reject { |k,v| k.to_sym.eql? :before }
    = form_tag(search_items_path, method: :get, authenticity_token: false, class: 'moduleForm') do
      = preserved_search_fields
      .formRow
        %label From
        - after = params[:after] || {}
        = select_month after[:month].to_i, {prompt: 'Month'}, name: 'after[month]', class: 'daterange month', id: :after_month
        = select_day   after[:day].to_i, {prompt: 'Day'}, name: 'after[day]', class: 'daterange day', id: :after_day
        = text_field nil, nil, value: after[:year], name: 'after[year]', placeholder: 'Year', class: 'daterange', id: :after_year
      .formRow
        %label To
        - before = params[:before] || {}
        = select_month before[:month].to_i, {prompt: 'Month'}, name: 'before[month]', class: 'daterange month', id: :before_month
        = select_day   before[:day].to_i, {prompt: 'Day'}, name: 'before[day]', class: 'daterange day', id: :before_day
        = text_field nil, nil, value: before[:year], name: 'before[year]', placeholder: 'Year', class: 'daterange', id: :before_year
      .formRow
        = submit_tag 'Update', class: 'btn orange', name: nil

- if @search.refine[:type].present? or @search.types.present?
  .module.yellow
    %h6.open By Format
    .slidingDiv
      - if @search.refine[:type].present?
        - @search.refine[:type].each do |refine|
          .refineResult
            %span= refine
            = link_to '×', refine_path(:type, refine, remove: true)
      - if @search.types.present?
        .locations
          %ul
            - @search.types.each do |name, count|
              %li
                = link_to name, refine_path(:type, name)
                %span= count

- if @search.refine[:language].present? or @search.languages.present?
  .module.yellow
    %h6.open By Language
    .slidingDiv
      - if @search.refine[:language].present?
        - @search.refine[:language].each do |refine|
          .refineResult
            %span= refine
            = link_to '×', refine_path(:language, refine, remove: true)
      - if @search.languages.present?
        .locations
          %ul
            - @search.languages.each do |name, count|
              %li
                = link_to name, refine_path(:language, name)
                %span= count