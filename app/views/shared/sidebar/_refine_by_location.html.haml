- if true #place_refines.present? or place_facets.present?
  .module.yellow
    %h6.open
      By Location
      %span.icon-arrow-up{"aria-hidden" => "true"}
    .slidingDiv
      - if country_refines.present?
        - country_refines.each do |refine|
          .refineResult
            %span= refine
            = link_to '×', refine_path(:country, refine, remove: true)
      - if state_refines.present?
        - state_refines.each do |refine|
          .refineResult
            %span= refine
            = link_to '×', refine_path(:state, refine, remove: true)
      - if place_refines.present?
        - place_refines.each do |refine|
          .refineResult
            %span= refine
            = link_to '×', refine_path(:place, refine, remove: true)
      - if place_facets.present?
        .locations
          %ul
            - place_facets.slice(0, 5 - place_refines.count).each do |facet|
              - name, count = facet.shift, facet.shift
              - if name.present?
                %li
                  = link_to name, refine_path(:place, name)
                  %span= count
    - if country_facets.present?
      .more= link_to 'More »', '#more_locations', class: 'inline cboxElement'

// Popup
- content_for :colorbox do
  #more_locations.inline_content
    %h1 Locations
    %ul.tabs
      %li.active
        %a{href: '#', data: {viewport: 'country_and_state'}} By Country & State
      %li
        %a{href: '#', data: {viewport: 'places_num'}} By A-Z
      %li
        %a{href: '#', data: {viewport: 'places_az'}} By Number of Results

    #country_and_state.viewport
      #countries
        .popBar
          .breadCrumbs
            %ul
              %li.current
                %a{href: '#'} Countries
          .pagination
            .t-data-grid-pager
              - if country_facets.count > 30
                - pages = (country_facets.count.to_f / 30).ceil
                - (1..pages).to_a.each do |page|
                  - if page == 1
                    %span.current{data: {page: page}}= page
                  - else
                    %a{href: '#', data: {page: page}}= page

        - us_refined = country_refines.include? 'United States'
        - us_facet = nil

        = country_facets.each_slice(30).with_index do |section, page|
          - page = page + 1
          - hidden_style = page != 1 ? 'display:none' : ''
          .pop-columns{data: {page: page}, style: "#{hidden_style}"}
            - section.in_groups(3).each do |column|
              %section
                %ul
                  - column.each do |facet|
                    - next if facet.nil?
                    - if facet.first == 'United States'
                      - us_facet = facet
                      - true
                  - if us_facet or us_refined
                    %li
                      %span.pop-open
                      - if us_refined
                        %span{style: 'float:left;'} United States
                      - else
                        = link_to 'United States', refine_path(:country, 'United States')
                      - if us_facet
                        %span= us_facet.last
                    - us_facet = us_refined = nil

                  - column.reject(&:nil?).each do |facet|
                    - name, count = facet.first, facet.last
                    - if name.present?
                      - next if name == 'United States'
                      %li
                        = link_to name, refine_path(:country, name)
                        %span= count

      #states
        .popBar
          .breadCrumbs
            %ul
              %li.countries
                %a{href: '#'} Countries
              %li /
              %li.current
                %a{href: '#'} United States
          .pagination
            .t-data-grid-pager
              - if state_facets.count > 30
                - pages = (state_facets.count.to_f / 30).ceil
                - (1..pages).to_a.each do |page|
                  - if page == 1
                    %span.current{data: {page: page}}= page
                  - else
                    %a{href: '#', data: {page: page}}= page
        = state_facets.each_slice(30).with_index do |section, page|
          - page = page + 1
          - hidden_style = page != 1 ? 'display:none' : ''
          .pop-columns{data: {page: page}, style: "#{hidden_style}"}
            - section.in_groups(3).each do |column|
              %section
                %ul
                  - column.reject(&:nil?).each do |facet|
                    - name, count = facet.shift, facet.shift
                    - if name.present?
                      %li
                        = link_to name, refine_path(:state, name)
                        %span= count

    #places_num.viewport
      .popBar
        .pagination
          .t-data-grid-pager
            - if place_facets.count > 30
              - pages = (place_facets.count.to_f / 30).ceil
              - (1..pages).to_a.each do |page|
                - if page == 1
                  %span.current{data: {page: page}}= page
                - else
                  %a{href: '#', data: {page: page}}= page
      - sorted_place_facets = place_facets.sort { |a,b| a.first.downcase <=> b.first.downcase }
      = sorted_place_facets.each_slice(30).with_index do |section, page|
        - page = page + 1
        - hidden_style = page != 1 ? 'display:none' : ''
        .pop-columns{data: {page: page}, style: "#{hidden_style}"}
          - section.in_groups(3).each do |column|
            %section
              %ul
                - column.reject(&:nil?).each do |facet|
                  - name, count = facet.shift, facet.shift
                  - if name.present?
                    %li
                      = link_to name, refine_path(:place, name)
                      %span= count

    #places_az.viewport
      .popBar
        .pagination
          .t-data-grid-pager
            - if place_facets.count > 30
              - pages = (place_facets.count.to_f / 30).ceil
              - (1..pages).to_a.each do |page|
                - if page == 1
                  %span.current{data: {page: page}}= page
                - else
                  %a{href: '#', data: {page: page}}= page
      = place_facets.each_slice(30).with_index do |section, page|
        - page = page + 1
        - hidden_style = page != 1 ? 'display:none' : ''
        .pop-columns{data: {page: page}, style: "#{hidden_style}"}
          - section.in_groups(3).each do |column|
            %section
              %ul
                - column.reject(&:nil?).each do |facet|
                  - name, count = facet.shift, facet.shift
                  - if name.present?
                    %li
                      = link_to name, refine_path(:place, name)
                      %span= count